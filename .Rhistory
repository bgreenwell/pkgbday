library(pkgbday)
library(pkgbday)
devtools:::package_find_repo
?install.packages
?na.omit
pkg.age("rpart")
cat("rpart is", as.double(pkg.age("rpart")) / 365, "years old today!\n")
library(pkgbday)
devtools:::read_archive
library(pkgbday)
examples(pkg.birthday)
examples("pkg.birthday")
?example
example(package = "pkgbday")
library(pkgbday)
pkg.age("rpart")
?readRDS
z <- readLines("https://cran.r-project.org/src/contrib/Archive/rpart/")
z
install.packages("rvest")
library(rvest)
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
cast <- html_nodes(html, "#titleCast .itemprop")
head(html)
cast <- html_nodes(html, "#titleCast .itemprop")
cast
td <- html_nodes(html, td")
""
?html_nodes
td <- html_nodes(html, css = "td")
head(td)
grep("[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]", td, values = TRUE)
grep("[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]", td, value = TRUE)
?gsub
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- grep(PATTERN, x = td, value = TRUE)
head(dates)
?regex
dates <- gsub("<*(.*?)>", x = dates, value = TRUE)
dates <- gsub("<*(.*?)>", x = dates, replacement = "")
head(dates)
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub("<td align=\"right\">", x = dates, replacement = "")
dates <- gsub("  </td>\n", x = dates, replacement = "")
head(dates)
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub(">*(.*?)<", "\\1", s)
head(dates)
?gsub
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub(">*(.*?)<", x = dates, replacement = "\\1")
head(dates)
fun <- function(pkg) {
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", pkg, "/")
html <- read_html(url)
td <- html_nodes(html, css = "td")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub("<td align=\"right\">", x = dates, replacement = "")
dates <- gsub("  </td>\n", x = dates, replacement = "")
dates
}
fun("MASS")
fun("MASS")
strpdate("2016-04-21 11:13", format = "%Y-%m-%d %H%M")
strptime("2016-04-21 11:13", format = "%Y-%m-%d %H%M")
?strptime
strptime("2016-04-21 11:13", format = "%Y-%m-%d %H:%M")
pkg.age2 <- function(pkg) {
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", pkg, "/")
html <- read_html(url)
td <- html_nodes(html, css = "td")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub("<td align=\"right\">", x = dates, replacement = "")
dates <- gsub("  </td>\n", x = dates, replacement = "")
strptime(dates, format = "%Y-%m-%d %H:%M")
}
pkg.age2("nnet")
pkg.age2 <- function(pkg) {
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", pkg, "/")
html <- read_html(url)
td <- html_nodes(html, css = "td")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub("<td align=\"right\">", x = dates, replacement = "")
dates <- gsub("  </td>\n", x = dates, replacement = "")
min(strptime(dates, format = "%Y-%m-%d %H:%M"))
}
pkg.age2("nnet")
pkg.bday <- function(pkg) {
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", pkg, "/")
html <- read_html(url)
td <- html_nodes(html, css = "td")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- grep(PATTERN, x = td, value = TRUE)
dates <- gsub("<td align=\"right\">", x = dates, replacement = "")
dates <- gsub("  </td>\n", x = dates, replacement = "")
as.character(min(strptime(dates, format = "%Y-%m-%d %H:%M")))
}
pkg.age2("nnet")
pkg.bday("nnet")
mb <- microbenchmark::microbenchmark(
pkg.bday("MASS"),
pkg.birthday("MASS"),
times = 10L
)
ggplot2::autoplot(mb)
?substr
dates <- grep(PATTERN, x = td, value = TRUE)
?regexpr
regexpr(PATTERN, text = dates)
regexec(PATTERN, text = dates)
gregexpr(PATTERN, text = dates)
head(dates)
stringr::str_extract(dates, PATTERN)
pkg.bday <- function(pkg) {
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", pkg, "/")
html <- read_html(url)
td <- html_nodes(html, css = "td")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
stringr::str_extract(td, pattern = PATTERN)
# dates <- grep(PATTERN, x = td, value = TRUE)
# dates <- gsub("<td align=\"right\">", x = dates, replacement = "")
# dates <- gsub("  </td>\n", x = dates, replacement = "")
as.character(min(strptime(dates, format = "%Y-%m-%d %H:%M")))
}
pkg.bday("randomForest")
head(td)
stringr::str_extract(td, pattern = PATTERN)
na.omit(stringr::str_extract(td, pattern = PATTERN))
dates <- na.omit(stringr::str_extract(td, pattern = PATTERN))
dates
as.character(min(strptime(dates, format = "%Y-%m-%d %H:%M")))
?na.omit
dates
dates <- na.omit(stringr::str_extract(td, pattern = PATTERN))
head(dates)
dates
attributes(dates) <- NULL
dates
as.character(min(strptime(dates, format = "%Y-%m-%d %H:%M")))
source('~/.active-rstudio-document', echo=TRUE)
mb
read_html
methods(read_html)
read_html.default
getAnywhere(read_html.default)
library(pkgbday)
library(pkgbday)
all.bdays
library(pkgbday)
all.bdays()
stringr::str_extract
stringi::stri_extract_first_regex(dates, pattern = "PATTERN")
stringi::stri_extract_first_regex(dates, pattern = PATTERN)
install.packages("stringi")
install.packages("roxygen2")
install.packages("roxygen2")
library(pkgbday)
library(pkgbday)
all
library(pkgbday)
all_bdays()
library(pkgbday)
all_bdays()
library(pkgbday)
all_bdays()
library(pkgbday)
all_bdays()
??read_html
library(pkgbday)
all_bdays()
library(pkgbday)
all_bdays()
library(pkgbday)
all_bdays()
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", "bartMachineJARs", "/")
xml2::read_html(url)
library(pkgbday)
pkg_bday("abcjdf")
pkg_bday("abcjdf")
url <- paste0("https://cran.r-project.org/src/contrib/Archive/", "bartMachineJARs", "/")
xml2::read_html(url)
rvest::html_nodes(xml2::read_html(url), css = "td")
tryCatch(rvest::html_nodes(xml2::read_html(url), css = "td"), error = function(e) NaN)
library(pkgbday)
pkg_bday("abcjdf")
library(pkgbday)
pkg_bday("abcjdf")
library(pkgbday)
pkg_bday("abcjdf")
all_bdays()
library(pkgbday)
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
library(rvest)
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
cast <- html_nodes(html, css = "td:nth-child(3)")
head(cast)
library(pkgbday)
library(pkgbday)
all_bdays()
pkg_bday("rpart")
library(pkgbday)
pkg_bday("rpart")
?xml2::read_html
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
library(rvest)
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
td <- html_nodes(html, css = "td:nth-child(3)")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- na.omit(stringi::stri_extract_first_regex(td, pattern = PATTERN))
as.character(min(strptime(dates, format = "%Y-%m-%d %H:%M")))
library(pkgbday)
pkg_bday("rpart")
all_bdays()
warnings()
?readLines
con <- url("https://cran.r-project.org/src/contrib/Archive/rpart/")
z <- readLines(con, n = 10L)
z
read_html.default
getAnywhere(read_html.default)
getAnywhere(read_xml.default)
getAnywhere(read_xml)
methods(read_xml)
getAnywhere(read_xml.character)
all_bdays()
closeAllConnections()
all_bdays()
library(pkgbday)
all_bdays()
warnings()
html <- read_html("https://cran.r-project.org/src/contrib/Archive/rpart/")
td <- html_nodes(html, css = "td:nth-child(3)")
PATTERN <- "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]"
dates <- na.omit(stringi::stri_extract_first_regex(td, pattern = PATTERN))
as.character(min(strptime(dates, format = "%Y-%m-%d %H:%M")))
library(pkgbday)
pkg_bday("rpart")
pkg_bday("MASS")
pkg_age("MASS")
class(pkg_bday("MASS"))
Sys.time()
library(pkgbday)
pkg_bday("rpart")
pkg_age("rpart")
as.double(pkg_age("rpart")) / 365
fun <- function(x) if (x == 1) NA else x
plyr::laply(1:3, fun)
library(pkgbday)
library(pkgbday)
all_bdays()
pkg_bday("abc")
pkg_bday("abcdef")
pkg_bday("abc")
library(pkgbday)
all_bdays()
tod <- format(Sys.time(), format = "%Y-%m-%d %H:%M")
format(tod, format = "%Y")
format(Sys.Date(), format = "%Y")
format(Sys.time(), format = "%Y")
bdays <- all_bdays()
bdays
class(bdays$birthday)
paste0(format(bdays$birthday, format = "%m/%d"), "/",
current.year)
tod <- format(Sys.time(), format = "%Y-%m-%d %H:%M")
fut <- format(Sys.time() + days, format = "%Y-%m-%d %H:%M")
fut <- format(Sys.time() + 150, format = "%Y-%m-%d %H:%M")
current.year <- format(Sys.time(), format = "%Y")
paste0(format(bdays$birthday, format = "%m/%d"), "/",
current.year)
tod
fut
Sys.time()
Sys.time()
Sys.time() + 50
Sys.Date()
paste0(current.year, "-", format(bdays$birthday, format = "%m-%d"))
bdays
id <- which(bdays >= tod & bdays <= fut)
bdays[id, ]
library(pkgbday)
upcoming_bdays
library(pkgbday)
upcoming_bdays()
library(pkgbday)
upcoming_bdays(days = 250)
upcoming_bdays(days = 150)
upcoming_bdays(days = 10)
library(pkgbday)
bdays <- all_bdays()
warnings()
bdays
